// Code generated by goctl. DO NOT EDIT.
// Source: asr.proto

package asrclient

import (
	"context"

	"go/go/pb/asr"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AsrRequest  = asr.AsrRequest
	AsrResponse = asr.AsrResponse

	ASR interface {
		ASR(ctx context.Context, in *AsrRequest, opts ...grpc.CallOption) (*AsrResponse, error)
	}

	defaultASR struct {
		cli zrpc.Client
	}
)

func NewASR(cli zrpc.Client) ASR {
	return &defaultASR{
		cli: cli,
	}
}

func (m *defaultASR) ASR(ctx context.Context, in *AsrRequest, opts ...grpc.CallOption) (*AsrResponse, error) {
	client := asr.NewASRClient(m.cli.Conn())
	return client.ASR(ctx, in, opts...)
}
